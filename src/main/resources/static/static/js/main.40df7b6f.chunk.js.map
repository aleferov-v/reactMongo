{"version":3,"sources":["App.js","components/Edit.js","components/Create.js","components/Show.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","contacts","_this2","axios","get","then","res","setState","data","console","log","react_default","a","createElement","class","Link","to","aria-hidden","map","c","concat","id","name","address","Component","Edit","onChange","e","contact","target","value","onSubmit","preventDefault","_this$state$contact","city","postalCode","phone","put","match","params","result","history","push","for","type","placeholder","email","Create","_this$state","post","_this$state2","Show","_this3","delete","onClick","bind","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40df7b6f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contacts: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get('/contacts')\n            .then(res => {\n                this.setState({ contacts: res.data });\n                console.log(this.state.contacts);\n            });\n    }\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">\n                            CONTACTS LIST\n                        </h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <h4><Link to=\"/create\"><span class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span> Add Contact</Link></h4>\n                        <table class=\"table table-stripe\">\n                            <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Address</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.contacts.map(c =>\n                                <tr>\n                                    <td><Link to={`/show/${c.id}`}>{c.name}</Link></td>\n                                    <td>{c.address}</td>\n                                </tr>\n                            )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Edit extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contact: {}\n        };\n    }\n\n    componentDidMount() {\n        axios.get('/contacts/'+this.props.match.params.id)\n            .then(res => {\n                this.setState({ contact: res.data });\n                console.log(this.state.contact);\n            });\n    }\n\n    onChange = (e) => {\n        const state = this.state.contact\n        state[e.target.name] = e.target.value;\n        this.setState({contact:state});\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { name, address, city, postalCode, phone } = this.state.contact;\n\n        axios.put('/contacts/'+this.props.match.params.id, { name, address, city, postalCode, phone })\n            .then((result) => {\n                this.props.history.push(\"/show/\"+this.props.match.params.id)\n            });\n    }\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">\n                            EDIT Contact\n                        </h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <h4><Link to={`/show/${this.state.contact.id}`}><span class=\"glyphicon glyphicon-eye-open\" aria-hidden=\"true\"></span> Contact List</Link></h4>\n                        <form onSubmit={this.onSubmit}>\n                            <div class=\"form-group\">\n                                <label for=\"name\">Name:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"name\" value={this.state.contact.name} onChange={this.onChange} placeholder=\"Name\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"title\">Address:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"address\" value={this.state.contact.address} onChange={this.onChange} placeholder=\"Address\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"author\">City:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"city\" value={this.state.contact.city} onChange={this.onChange} placeholder=\"City\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"published_date\">Phone Number:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"phone\" value={this.state.contact.phone} onChange={this.onChange} placeholder=\"Phone Number\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"description\">Email:</label>\n                                <input type=\"email\" class=\"form-control\" name=\"email\" value={this.state.contact.email} onChange={this.onChange} placeholder=\"Email Address\" />\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-success\">Update</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Create extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            address: '',\n            city: '',\n            phone: '',\n            email: ''\n        };\n    }\n    onChange = (e) => {\n        const state = this.state\n        state[e.target.name] = e.target.value;\n        this.setState(state);\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { name, address, city, phone, email } = this.state;\n\n        axios.post('/contacts', { name, address, city, phone, email })\n            .then((result) => {\n                this.props.history.push(\"/\")\n            });\n    }\n\n    render() {\n        const { name, address, city, phone, email } = this.state;\n        return (\n            <div class=\"container\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">\n                            ADD CONTACT\n                        </h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span> Contacts List</Link></h4>\n                        <form onSubmit={this.onSubmit}>\n                            <div class=\"form-group\">\n                                <label for=\"isbn\">Name:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"name\" value={name} onChange={this.onChange} placeholder=\"Name\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"title\">Address:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"address\" value={address} onChange={this.onChange} placeholder=\"Address\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"author\">City:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"city\" value={city} onChange={this.onChange} placeholder=\"City\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"published_date\">Phone:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"phone\" value={phone} onChange={this.onChange} placeholder=\"Phone Number\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"publisher\">Email:</label>\n                                <input type=\"email\" class=\"form-control\" name=\"email\" value={email} onChange={this.onChange} placeholder=\"Email Address\" />\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Create;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Show extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contact: {}\n        };\n    }\n\n    componentDidMount() {\n        axios.get('/contacts/'+this.props.match.params.id)\n            .then(res => {\n                this.setState({ contact: res.data });\n                console.log(this.state.contact);\n            });\n    }\n\n    delete(id){\n        console.log(id);\n        axios.delete('/contacts/'+id)\n            .then((result) => {\n                this.props.history.push(\"/\")\n            });\n    }\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">\n                            Contact Details\n                        </h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span> Contacts List</Link></h4>\n                        <dl>\n                            <dt>Name:</dt>\n                            <dd>{this.state.contact.name}</dd>\n                            <dt>Address:</dt>\n                            <dd>{this.state.contact.address}</dd>\n                            <dt>City:</dt>\n                            <dd>{this.state.contact.city}</dd>\n                            <dt>Phone Number:</dt>\n                            <dd>{this.state.contact.phone}</dd>\n                            <dt>Email Address:</dt>\n                            <dd>{this.state.contact.email}</dd>\n                        </dl>\n                        <Link to={`/edit/${this.state.contact.id}`} class=\"btn btn-success\">Edit</Link>&nbsp;\n                        <button onClick={this.delete.bind(this, this.state.contact.id)} class=\"btn btn-danger\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Show;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport './App.css';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <div>\n            <Route exact path='/' component={App} />\n            <Route path='/edit/:id' component={Edit} />\n            <Route path='/create' component={Create} />\n            <Route path='/show/:id' component={Show} />\n        </div>\n    </Router>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}